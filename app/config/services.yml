parameters:
    #parameter_name: value

services:

     _defaults:
            # automatically injects dependencies in your services
           autowire: true
            # automatically registers your services as commands, event subscribers, etc.
           autoconfigure: true
           # this means you cannot fetch services directly from the container via $container->get()
           # if you need to do this, you can override this setting on individual services
           public: false

     Geek\BlogBundle\:
            resource: '../../src/Geek/BlogBundle/*'
                # you can exclude directories or files
                # but if a service is unused, it's removed anyway
            exclude: '../../src/Geek/BlogBundle/{Entity,Repository,Tests,DQL}'

     Geek\BlogBundle\Controller\:
            resource: '../../src/Geek/BlogBundle/Controller'
            public: true
            tags: ['controller.service_arguments']

     create_user.command:
            class: Geek\BlogBundle\Command\CreateUserCommand
            arguments:
                - "@doctrine"
                - "@security.password_encoder"

     app.menu_builder:
            class: Geek\BlogBundle\Menu\Builder
            arguments: ["@knp_menu.factory"]

     app.main_menu:
            public: true
            class: Knp\Menu\MenuItem # the service definition requires setting the class
            factory: ["@app.menu_builder", createMainMenu]
            arguments: ["@request_stack"]
            tags:
                - { name: knp_menu.menu, alias: main }